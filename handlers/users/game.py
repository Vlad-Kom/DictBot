from aiogram import types
from aiogram.dispatcher.storage import FSMContext
from utils.db_api.sqlite import Database
from states.game import State_game
from keyboards.inline.game_buttons import but_game
from keyboards.inline.back_game_button import back_game_but
from keyboards.inline.language_game_buttons import lang_game_but
from utils.func import game_translate_word
from random import choice

from loader import dp

db = Database()


@dp.callback_query_handler(state="*", text="game")
async def bot_dict(call: types.CallbackQuery):
    await call.message.edit_text("–ù—É–∂–Ω–æ –≤—ã–±—Ä–∞—Ç—å —Å–ª–æ–≤–∞—Ä—å –¥–ª—è –∏–≥—Ä—ã", reply_markup=lang_game_but)
    await State_game.game_main.set()


@dp.callback_query_handler(state=State_game.game_main)
async def bot_game_main(call: types.CallbackQuery, state: FSMContext):
    words = db.set_words(call.message.chat.id, call.data)
    if not words:
        return await call.message.edit_text("–í —Å–ª–æ–≤–∞—Ä–µ —Å–ª–∏—à–∫–æ–º –º–∞–ª–æ —Å–ª–æ–≤ –¥–ª—è –∏–≥—Ä—ã üò¢ \n"
                                          "–ß—Ç–æ –±—É–¥–µ–º –¥–µ–ª–∞—Ç—å?\n",
                                 reply_markup=back_game_but)
    await state.update_data(
        {
            "language": call.data,
            "answer": words[0][0]
        }
    )
    await call.message.edit_text("–ü–µ—Ä–µ–≤–æ–¥ –∫–∞–∫–æ–≥–æ —ç—Ç–æ —Å–ª–æ–≤–∞?\n" + game_translate_word(words[0][0]),
                                 reply_markup=but_game(words))
    await State_game.game_answer.set()


@dp.callback_query_handler(state=State_game.game_answer)
async def bot_game_answer(call: types.CallbackQuery, state: FSMContext):
    data = await state.get_data()
    lst_answer = ['–ü—Ä–∞–≤–∏–ª—å–Ω–æ! \n',
                  '–î–∞, –≤–µ—Ä–Ω–æ!\n',
                  '–ë–µ–∑—É–ø—Ä–µ—á–Ω–æ!\n',
                  '+ –æ—á–∫–æ!\n',
                  '–ë–ª–µ—Å—Ç—è—â–µ!\n'
                  ]
    answer = data.get("answer")
    words = db.set_words(call.message.chat.id, data.get("language"))
    await state.update_data(answer=words[0][0])
    if call.data == answer:
        db.increase_value_word(call.message.chat.id, answer)
        await call.message.edit_text(choice(lst_answer) + '–ü—Ä–æ–¥–æ–ª–∂–∞–µ–ºüëáüèª\n' + game_translate_word(words[0][0]),
                                     reply_markup=but_game(words))
    else:
        db.zero_value_word(call.message.chat.id, answer)
        await call.message.edit_text('–ù–µ–≤–µ—Ä–Ω–æüò¢\n'
                                     '–ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç - ' + answer + '\n'
                                                                      '–ü—Ä–æ–¥–æ–ª–∂–∞–µ–ºüëáüèª\n' + game_translate_word(words[0][0]),
                                     reply_markup=but_game(words))
