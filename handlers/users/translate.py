from aiogram import types

from keyboards.inline.back_dict_button import back_dict_but
from utils.func import translate_word
from states.dict import State_dict
from loader import dp


@dp.callback_query_handler(state=State_dict.dict_main, text="translate")
async def bot_translate(call: types.CallbackQuery):
    await call.message.edit_text('–ß—Ç–æ –ø–µ—Ä–µ–≤–µ—Å—Ç–∏?', reply_markup=back_dict_but)
    await State_dict.dict_translate.set()


@dp.message_handler(state=State_dict.dict_translate)
async def bot_state_translate(message: types.Message):
    try:
        result = translate_word(id_user=message.chat.id, word=message.text.lower())
        if result == 0:
            await message.answer("–ù–µ –º–æ–≥—É –ø–µ—Ä–µ–≤–µ—Å—Ç–∏üò¢\n "
                                 "–í–æ–∑–º–æ–∂–Ω–æ, –≤—ã –∏—Å–ø–æ–ª—å–∑—É–µ—Ç–µ —Ü–∏—Ñ—Ä—ã –∏–ª–∏ —ç–º–æ–¥–∑–∏",
                             reply_markup=back_dict_but)
            return
        if result == 1:
            await message.answer('–°–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ —Å–ª–æ–≤ –¥–ª—è –º–µ–Ω—èüòÖ \n'
                                 '–î–∞–≤–∞–π —á—Ç–æ-–Ω–∏–±—É–¥—å –ø–æ–ø—Ä–æ—â–µ. –ù–µ –±–æ–ª—å—à–µ —Ç—Ä–µ—Ö —Å–ª–æ–≤',
                             reply_markup=back_dict_but)
            return
        if result == 2:
            await message.answer("–ù–µ –º–æ–≥—É –ø–µ—Ä–µ–≤–µ—Å—Ç–∏üò¢\n "
                                          "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ç–µ–∫—Å—Ç, —á—Ç–æ-—Ç–æ —Å –Ω–∏–º –Ω–µ —Ç–∞–∫...",
                             reply_markup=back_dict_but)
            return
        await message.answer(result,
                         reply_markup=back_dict_but)
    except:
        await message.answer(message.chat.id, '–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫',
                         reply_markup=back_dict_but)